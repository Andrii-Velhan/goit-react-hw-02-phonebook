{"version":3,"sources":["components/Container/Container.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","ContactList","contacts","onDeleteContact","map","id","name","number","onClick","ContactForm","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","alert","props","onSubmit","this","htmlFor","type","onChange","Component","defaultProps","Filter","onChangeFilter","App","initialContacts","filter","addContact","contact","uuidv4","deleteContact","contactId","prevState","changeFilter","currentTarget","normalizedFilter","toLowerCase","totalContactsCount","length","visibleContacts","includes","initialValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9deca3d9.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport './ContactList.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className=\"ContactList\">\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className=\"ContactList__item\">\n        <p className=\"ContactList__name\">\n          {name}: {number}\n        </p>\n        <button\n          className=\"ContactList__button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport './ContactForm.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    //\n  };\n\n  static defaultProps = {};\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n\n    if (name === '' || number === '') {\n      alert('Enter data to each of inputs: [name & number] !!!');\n    } else {\n      this.props.onSubmit(name, number);\n\n      this.setState({ name: '', number: '' });\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\n          <label className=\"Label\" htmlFor=\"name\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            value={name}\n            id=\"name\"\n            className=\"ContactForm__input\"\n            name=\"name\"\n            onChange={this.handleChange}\n          />\n\n          <label className=\"Label\" htmlFor=\"number\">\n            Number\n          </label>\n          <input\n            type=\"number\"\n            value={number}\n            id=\"number\"\n            className=\"ContactForm__input\"\n            name=\"number\"\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\" className=\"ContactForm__button\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport './Filter.css';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <div className=\"filterForm\">\n    <label htmlFor=\"find\" className=\"filterLabel\">\n      Find contact by name\n    </label>\n    <input\n      type=\"text\"\n      value={value}\n      id=\"find\"\n      className=\"filterInput\"\n      onChange={onChangeFilter}\n      // onChange={event => onChangeFilter(event.target.value)}\n    />\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import './App.css';\nimport 'modern-normalize/modern-normalize.css';\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport initialContacts from './bd/contacts.json';\n\nexport default class App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {};\n\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n    // console.log(contactId);\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  // getVisibleContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   return normalizedFilter.length > 0\n  //     ? this.state.contacts.filter(contact =>\n  //         contact.name.toLowerCase().includes(normalizedFilter),\n  //       )\n  //     : this.state.contacts;\n  // };\n\n  render() {\n    const { filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const totalContactsCount = this.state.contacts.length;\n    const visibleContacts =\n      normalizedFilter.length > 0\n        ? this.state.contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n          )\n        : this.state.contacts;\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <p>Total contacts count: {totalContactsCount}</p>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}