{"version":3,"sources":["components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["ContactList","contacts","onDeleteContact","className","map","id","name","number","onClick","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","Component","defaultProps","App","filter","addContact","contact","uuidv4","deleteContact","contactId","prevState","console","log","length","initialValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAuBeA,G,MAlBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,oBAAIC,UAAU,cAAd,SACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAaJ,UAAU,oBAAvB,UACE,oBAAGA,UAAU,oBAAb,UACGG,EADH,KACWC,KAEX,wBAAQC,QAAS,kBAAMN,EAAgBG,IAAvC,sBAJOA,U,OCHTI,G,kNACJC,MAAQ,CAENJ,KAAM,GACNC,OAAQ,I,EASVI,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBP,EADU,EACVA,KAAMQ,EADI,EACJA,MACd,EAAKC,SAAL,eAAiBT,EAAOQ,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,MAEO,EAAKP,MAAtBJ,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OAEd,EAAKW,MAAMC,SAASb,EAAMC,GAE1B,EAAKQ,SAAS,CAAET,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBa,KAAKV,MAAtBJ,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,mCACE,uBAAMJ,UAAU,cAAcgB,SAAUC,KAAKJ,aAA7C,UACE,wBAAOb,UAAU,QAAjB,iBAEE,uBACEkB,KAAK,OACLP,MAAOR,EACPD,GAAG,OACHF,UAAU,wBACVG,KAAK,OACLgB,SAAUF,KAAKT,kBAInB,wBAAOR,UAAU,QAAjB,mBAEE,uBACEkB,KAAK,SACLP,MAAOP,EACPF,GAAG,SACHF,UAAU,QACVG,KAAK,SACLgB,SAAUF,KAAKT,kBAGnB,wBAAQU,KAAK,SAASlB,UAAU,sBAAhC,kC,GAvDgBoB,cAApBd,EAWGe,aAAe,GAqDTf,QC9DMgB,E,4MAOnBf,MAAQ,CACNT,SAAU,CACR,CAAEI,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAIhDmB,OAAQ,I,EAGVC,WAAa,SAACrB,EAAMC,GAClB,IAAMqB,EAAU,CACdvB,GAAIwB,cACJvB,OACAC,UAGF,EAAKQ,UAAS,gBAAGd,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAE2B,GAAH,mBAAe3B,S,EAI3B6B,cAAgB,SAAAC,GACd,EAAKhB,UAAS,SAAAiB,GAAS,MAAK,CAC1B/B,SAAU+B,EAAU/B,SAASyB,QAAO,SAAAE,GAAO,OAAIA,EAAQvB,KAAO0B,SAEhEE,QAAQC,IAAIH,I,uDAGJ,IACA9B,EAAamB,KAAKV,MAAlBT,SAER,OACE,qCACE,2CACA,cAAC,EAAD,CAAakB,SAAUC,KAAKO,aAC5B,0CAEA,sDAAyB1B,EAASkC,UAClC,cAAC,EAAD,CAAalC,SAAUA,EAAUC,gBAAiBkB,KAAKU,uB,GAhD9BP,aAAZE,EACZD,aAAe,CACpBY,aAAc,GCTlB,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bfbc0dc2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport './ContactList.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className=\"ContactList\">\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className=\"ContactList__item\">\n        <p className=\"ContactList__name\">\n          {name}: {number}\n        </p>\n        <button onClick={() => onDeleteContact(id)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(PropTypes.object),\n//   onDeleteContact: PropTypes.func,\n// };\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport './ContactForm.css';\n\nclass ContactForm extends Component {\n  state = {\n    // message: '',\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    //\n  };\n\n  static defaultProps = {};\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onSubmit(name, number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\n          <label className=\"Label\">\n            Name\n            <input\n              type=\"text\"\n              value={name}\n              id=\"name\"\n              className=\"ContactForm__textarea\"\n              name=\"name\"\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"Label\">\n            Number\n            <input\n              type=\"number\"\n              value={number}\n              id=\"number\"\n              className=\"Input\"\n              name=\"number\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className=\"ContactForm__button\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import './App.css';\nimport 'modern-normalize/modern-normalize.css';\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\n\nexport default class App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {};\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    // name: '',\n    // number: '',\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n    console.log(contactId);\n  };\n\n  render() {\n    const { contacts } = this.state;\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        {/* <Filter /> */}\n        <div>Contacts quantity: {contacts.length}</div>\n        <ContactList contacts={contacts} onDeleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}